<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.V3OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.V3OrderInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="shop_member_id" property="shopMemberId" jdbcType="INTEGER" />
    <result column="shop_level" property="shopLevel" jdbcType="INTEGER" />
    <result column="pay_member_id" property="payMemberId" jdbcType="INTEGER" />
    <result column="pay_member_relation" property="payMemberRelation" jdbcType="VARCHAR" />
    <result column="payment_amount" property="paymentAmount" jdbcType="DECIMAL" />
    <result column="province_id" property="provinceId" jdbcType="INTEGER" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="area_id" property="areaId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="profit_status" property="profitStatus" jdbcType="BIT" />
    <result column="profit_remark" property="profitRemark" jdbcType="VARCHAR" />
    <result column="received_at" property="receivedAt" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sn, shop_member_id, shop_level, pay_member_id, pay_member_relation, payment_amount, 
    province_id, city_id, area_id, address, payment_time, state, profit_status, profit_remark, 
    received_at, created_at, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.model.V3OrderInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.model.V3OrderInfoExample" >
    delete from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.model.V3OrderInfo" >
    insert into order_info (id, sn, shop_member_id, 
      shop_level, pay_member_id, pay_member_relation, 
      payment_amount, province_id, city_id, 
      area_id, address, payment_time, 
      state, profit_status, profit_remark, 
      received_at, created_at, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{sn,jdbcType=VARCHAR}, #{shopMemberId,jdbcType=INTEGER}, 
      #{shopLevel,jdbcType=INTEGER}, #{payMemberId,jdbcType=INTEGER}, #{payMemberRelation,jdbcType=VARCHAR}, 
      #{paymentAmount,jdbcType=DECIMAL}, #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, 
      #{areaId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=TINYINT}, #{profitStatus,jdbcType=BIT}, #{profitRemark,jdbcType=VARCHAR}, 
      #{receivedAt,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.V3OrderInfo" >
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sn != null" >
        sn,
      </if>
      <if test="shopMemberId != null" >
        shop_member_id,
      </if>
      <if test="shopLevel != null" >
        shop_level,
      </if>
      <if test="payMemberId != null" >
        pay_member_id,
      </if>
      <if test="payMemberRelation != null" >
        pay_member_relation,
      </if>
      <if test="paymentAmount != null" >
        payment_amount,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="areaId != null" >
        area_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="profitStatus != null" >
        profit_status,
      </if>
      <if test="profitRemark != null" >
        profit_remark,
      </if>
      <if test="receivedAt != null" >
        received_at,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="shopMemberId != null" >
        #{shopMemberId,jdbcType=INTEGER},
      </if>
      <if test="shopLevel != null" >
        #{shopLevel,jdbcType=INTEGER},
      </if>
      <if test="payMemberId != null" >
        #{payMemberId,jdbcType=INTEGER},
      </if>
      <if test="payMemberRelation != null" >
        #{payMemberRelation,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null" >
        #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="profitStatus != null" >
        #{profitStatus,jdbcType=BIT},
      </if>
      <if test="profitRemark != null" >
        #{profitRemark,jdbcType=VARCHAR},
      </if>
      <if test="receivedAt != null" >
        #{receivedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.model.V3OrderInfoExample" resultType="java.lang.Integer" >
    select count(*) from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.shopMemberId != null" >
        shop_member_id = #{record.shopMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.shopLevel != null" >
        shop_level = #{record.shopLevel,jdbcType=INTEGER},
      </if>
      <if test="record.payMemberId != null" >
        pay_member_id = #{record.payMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.payMemberRelation != null" >
        pay_member_relation = #{record.payMemberRelation,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentAmount != null" >
        payment_amount = #{record.paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.provinceId != null" >
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null" >
        area_id = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.profitStatus != null" >
        profit_status = #{record.profitStatus,jdbcType=BIT},
      </if>
      <if test="record.profitRemark != null" >
        profit_remark = #{record.profitRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.receivedAt != null" >
        received_at = #{record.receivedAt,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_info
    set id = #{record.id,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=VARCHAR},
      shop_member_id = #{record.shopMemberId,jdbcType=INTEGER},
      shop_level = #{record.shopLevel,jdbcType=INTEGER},
      pay_member_id = #{record.payMemberId,jdbcType=INTEGER},
      pay_member_relation = #{record.payMemberRelation,jdbcType=VARCHAR},
      payment_amount = #{record.paymentAmount,jdbcType=DECIMAL},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=TINYINT},
      profit_status = #{record.profitStatus,jdbcType=BIT},
      profit_remark = #{record.profitRemark,jdbcType=VARCHAR},
      received_at = #{record.receivedAt,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.V3OrderInfo" >
    update order_info
    <set >
      <if test="sn != null" >
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="shopMemberId != null" >
        shop_member_id = #{shopMemberId,jdbcType=INTEGER},
      </if>
      <if test="shopLevel != null" >
        shop_level = #{shopLevel,jdbcType=INTEGER},
      </if>
      <if test="payMemberId != null" >
        pay_member_id = #{payMemberId,jdbcType=INTEGER},
      </if>
      <if test="payMemberRelation != null" >
        pay_member_relation = #{payMemberRelation,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null" >
        payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null" >
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="profitStatus != null" >
        profit_status = #{profitStatus,jdbcType=BIT},
      </if>
      <if test="profitRemark != null" >
        profit_remark = #{profitRemark,jdbcType=VARCHAR},
      </if>
      <if test="receivedAt != null" >
        received_at = #{receivedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.V3OrderInfo" >
    update order_info
    set sn = #{sn,jdbcType=VARCHAR},
      shop_member_id = #{shopMemberId,jdbcType=INTEGER},
      shop_level = #{shopLevel,jdbcType=INTEGER},
      pay_member_id = #{payMemberId,jdbcType=INTEGER},
      pay_member_relation = #{payMemberRelation,jdbcType=VARCHAR},
      payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      profit_status = #{profitStatus,jdbcType=BIT},
      profit_remark = #{profitRemark,jdbcType=VARCHAR},
      received_at = #{receivedAt,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>