<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.V3OrderGoodsInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.V3OrderGoodsInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="shop_member_id" property="shopMemberId" jdbcType="INTEGER" />
    <result column="member_level" property="memberLevel" jdbcType="TINYINT" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="agent_goods_id" property="agentGoodsId" jdbcType="INTEGER" />
    <result column="agent_goods_number" property="agentGoodsNumber" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_level" property="goodsLevel" jdbcType="BIT" />
    <result column="goods_profit_rate" property="goodsProfitRate" jdbcType="DECIMAL" />
    <result column="sale_count" property="saleCount" jdbcType="INTEGER" />
    <result column="goods_amount" property="goodsAmount" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="profit_status" property="profitStatus" jdbcType="BIT" />
    <result column="profit_remark" property="profitRemark" jdbcType="VARCHAR" />
    <result column="received_at" property="receivedAt" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, shop_member_id, member_level, goods_id, agent_goods_id, agent_goods_number, 
    goods_name, goods_level, goods_profit_rate, sale_count, goods_amount, state, profit_status, 
    profit_remark, received_at, created_at, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.model.V3OrderGoodsInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_goods_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_goods_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_goods_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.model.V3OrderGoodsInfoExample" >
    delete from order_goods_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.model.V3OrderGoodsInfo" >
    insert into order_goods_info (id, order_id, shop_member_id, 
      member_level, goods_id, agent_goods_id, 
      agent_goods_number, goods_name, goods_level, 
      goods_profit_rate, sale_count, goods_amount, 
      state, profit_status, profit_remark, 
      received_at, created_at, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{shopMemberId,jdbcType=INTEGER}, 
      #{memberLevel,jdbcType=TINYINT}, #{goodsId,jdbcType=INTEGER}, #{agentGoodsId,jdbcType=INTEGER}, 
      #{agentGoodsNumber,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsLevel,jdbcType=BIT}, 
      #{goodsProfitRate,jdbcType=DECIMAL}, #{saleCount,jdbcType=INTEGER}, #{goodsAmount,jdbcType=DECIMAL}, 
      #{state,jdbcType=TINYINT}, #{profitStatus,jdbcType=BIT}, #{profitRemark,jdbcType=VARCHAR}, 
      #{receivedAt,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.V3OrderGoodsInfo" >
    insert into order_goods_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="shopMemberId != null" >
        shop_member_id,
      </if>
      <if test="memberLevel != null" >
        member_level,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="agentGoodsId != null" >
        agent_goods_id,
      </if>
      <if test="agentGoodsNumber != null" >
        agent_goods_number,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsLevel != null" >
        goods_level,
      </if>
      <if test="goodsProfitRate != null" >
        goods_profit_rate,
      </if>
      <if test="saleCount != null" >
        sale_count,
      </if>
      <if test="goodsAmount != null" >
        goods_amount,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="profitStatus != null" >
        profit_status,
      </if>
      <if test="profitRemark != null" >
        profit_remark,
      </if>
      <if test="receivedAt != null" >
        received_at,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="shopMemberId != null" >
        #{shopMemberId,jdbcType=INTEGER},
      </if>
      <if test="memberLevel != null" >
        #{memberLevel,jdbcType=TINYINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="agentGoodsId != null" >
        #{agentGoodsId,jdbcType=INTEGER},
      </if>
      <if test="agentGoodsNumber != null" >
        #{agentGoodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsLevel != null" >
        #{goodsLevel,jdbcType=BIT},
      </if>
      <if test="goodsProfitRate != null" >
        #{goodsProfitRate,jdbcType=DECIMAL},
      </if>
      <if test="saleCount != null" >
        #{saleCount,jdbcType=INTEGER},
      </if>
      <if test="goodsAmount != null" >
        #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="profitStatus != null" >
        #{profitStatus,jdbcType=BIT},
      </if>
      <if test="profitRemark != null" >
        #{profitRemark,jdbcType=VARCHAR},
      </if>
      <if test="receivedAt != null" >
        #{receivedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.model.V3OrderGoodsInfoExample" resultType="java.lang.Integer" >
    select count(*) from order_goods_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_goods_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.shopMemberId != null" >
        shop_member_id = #{record.shopMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.memberLevel != null" >
        member_level = #{record.memberLevel,jdbcType=TINYINT},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.agentGoodsId != null" >
        agent_goods_id = #{record.agentGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.agentGoodsNumber != null" >
        agent_goods_number = #{record.agentGoodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsLevel != null" >
        goods_level = #{record.goodsLevel,jdbcType=BIT},
      </if>
      <if test="record.goodsProfitRate != null" >
        goods_profit_rate = #{record.goodsProfitRate,jdbcType=DECIMAL},
      </if>
      <if test="record.saleCount != null" >
        sale_count = #{record.saleCount,jdbcType=INTEGER},
      </if>
      <if test="record.goodsAmount != null" >
        goods_amount = #{record.goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.profitStatus != null" >
        profit_status = #{record.profitStatus,jdbcType=BIT},
      </if>
      <if test="record.profitRemark != null" >
        profit_remark = #{record.profitRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.receivedAt != null" >
        received_at = #{record.receivedAt,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_goods_info
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      shop_member_id = #{record.shopMemberId,jdbcType=INTEGER},
      member_level = #{record.memberLevel,jdbcType=TINYINT},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      agent_goods_id = #{record.agentGoodsId,jdbcType=INTEGER},
      agent_goods_number = #{record.agentGoodsNumber,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_level = #{record.goodsLevel,jdbcType=BIT},
      goods_profit_rate = #{record.goodsProfitRate,jdbcType=DECIMAL},
      sale_count = #{record.saleCount,jdbcType=INTEGER},
      goods_amount = #{record.goodsAmount,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=TINYINT},
      profit_status = #{record.profitStatus,jdbcType=BIT},
      profit_remark = #{record.profitRemark,jdbcType=VARCHAR},
      received_at = #{record.receivedAt,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.V3OrderGoodsInfo" >
    update order_goods_info
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="shopMemberId != null" >
        shop_member_id = #{shopMemberId,jdbcType=INTEGER},
      </if>
      <if test="memberLevel != null" >
        member_level = #{memberLevel,jdbcType=TINYINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="agentGoodsId != null" >
        agent_goods_id = #{agentGoodsId,jdbcType=INTEGER},
      </if>
      <if test="agentGoodsNumber != null" >
        agent_goods_number = #{agentGoodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsLevel != null" >
        goods_level = #{goodsLevel,jdbcType=BIT},
      </if>
      <if test="goodsProfitRate != null" >
        goods_profit_rate = #{goodsProfitRate,jdbcType=DECIMAL},
      </if>
      <if test="saleCount != null" >
        sale_count = #{saleCount,jdbcType=INTEGER},
      </if>
      <if test="goodsAmount != null" >
        goods_amount = #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="profitStatus != null" >
        profit_status = #{profitStatus,jdbcType=BIT},
      </if>
      <if test="profitRemark != null" >
        profit_remark = #{profitRemark,jdbcType=VARCHAR},
      </if>
      <if test="receivedAt != null" >
        received_at = #{receivedAt,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.V3OrderGoodsInfo" >
    update order_goods_info
    set order_id = #{orderId,jdbcType=INTEGER},
      shop_member_id = #{shopMemberId,jdbcType=INTEGER},
      member_level = #{memberLevel,jdbcType=TINYINT},
      goods_id = #{goodsId,jdbcType=INTEGER},
      agent_goods_id = #{agentGoodsId,jdbcType=INTEGER},
      agent_goods_number = #{agentGoodsNumber,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_level = #{goodsLevel,jdbcType=BIT},
      goods_profit_rate = #{goodsProfitRate,jdbcType=DECIMAL},
      sale_count = #{saleCount,jdbcType=INTEGER},
      goods_amount = #{goodsAmount,jdbcType=DECIMAL},
      state = #{state,jdbcType=TINYINT},
      profit_status = #{profitStatus,jdbcType=BIT},
      profit_remark = #{profitRemark,jdbcType=VARCHAR},
      received_at = #{receivedAt,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="rGetOrderGoodsInfo" resultType="java.util.HashMap">
    SELECT a.from_member_id, left(a.created_at, 19) tt, b.* FROM profit_log a
    JOIN `order_goods_info` b ON a.`from_order_id` = b.`order_id`
    WHERE (a.status = 1 OR a.status = 2) AND a.`member_id` = #{memberId} AND (
	(a.`rate` = 0.05 AND a.`member_level` = 1) OR a.`rate` >0.09
    ) AND from_agent_goods_id > 0 AND b.`state` = 0 AND b.`profit_status` = 0
  </select>
</mapper>