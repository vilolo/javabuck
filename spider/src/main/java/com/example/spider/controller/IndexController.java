package com.example.spider.controller;

import com.example.spider.model.ItemModel;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Component;

import java.io.*;
import java.util.*;

@Component
public class IndexController {
    public void index(){
        test1();
    }

    private void test1(){
        String baseUrl = "https://www.pinkclassy.com/s/";
        String[] list = new String[]{"137453","137721","139748","140198","140507","141262","141514","142407","142816","142894","143102","143798","144185","145081","145286","145286","145286","145286","145346","145346","145346","146093","146093","146093","146263","146713","147298","148516","148533","149534","150883","151456","152673","152673","153410","153410","153990","154509","154509","154509","154509","154509","155940","155940","155940","155940","156400","158489","158969","158969","158969","158969","159038","159869","160596","160596","160938","160938","161207","161807","162767","162767","162767","162767","162967","162967","164615","164615","164615","164615","165995","166689","167868","167868","167868","167868","167868","168094","168298","168298","168298","168298","168483","168483","168990","169620","169620","170800","172803","172803","172803","172940","173108","173108","173108","173261","173261","173261","173261","173261","173261","173720","173720","173720","173720","173720","173720","173720","174166","174166","174166","174166","174592","174592","175570","176434","176434","176434","176434","176536","177362","177362","177553","177553","177553","178242","178242","179226","179226","179226","179229","179229","179229","179229","179306","179306","179306","180575","182713","182713","182713","182713","182764","182764","182794","182794","182806","182806","182964","182964","182982","183079","183079","183611","183611","183611","183958","183958","184168","184168","184244","185833","186020","186020","186689","187745","187745","187745","187859","188572","189219","189219","189585","189670","190569","191038","191038","191522","191522","191522","191522","191554","191554","400519","401597","401597","401597","401597","401597","401774","401774","401774","402859","403060","403060","403998","404233","404483","404483","404483","404483","404521","404529","404648","405373","405373","405373","405373","406009","406009","406456","406570","406570","406572","406572","408372","408460","408460","408460","408460","408581","408581","410476","410498","410498","410853","410853","410853","410853","411790","411790","411884","411891","411891","413204","413907","413907","414169","414169","415014","415581","415585","415595","415595","415595","415595","415988","416197","416197","416519","416654","416654","416856","416856","417098","417110","417634","417634","417668","417930","418536","418536","419230","419288","419288","419394","419572","419754","419934","419934","420369","420819","420819","420819","420826","420941","420941","420941","420963","420963","421114","421114","421933","421933","421933","421933","422704","422704","422704","423165","423192","423192","423220","423220","423259","423740","423967","423972","423972","423978","423978","424279","424285","424286","424290","424291","424293","424294","424340","424340","424340","424340","424345","424345","424406","424849","424859","424864","424940","424948","424951","424951","424998","425235","425235","425235","425235","425359","425394","425525","425525","425525","425525","425554","425554","425554","425800","425800","425800","425800","425800","425842","426297","426297","426363","426363","426766","428151","428282","428282","428557","428557","428739","428745","428751","428930","429256","429256","429256","429465","429740","429740","429740","429760","429760","429920","429944","429953","430110","430110","430110","430110","430110","430584","430660","430956","431086","431090","431092","431092","431092","431092","431094","431438","431453","431455","431461","431529","431961","432025","432072","432609","432635","432691","432867","432867","432867","432874","432874","432951","432956","432958","432961","432966","432968","433409","433497","433497","433497","433593","433593","433688","433689","433689","433689","433689","433765","433765","433765","434019","434019","434019","434022","434022","434022","434027","434027","434163","434163","434163","434185","434185","434320","434320","434320","434483","434492","434492","434492","434492","434637","434637","434637","434637","434649","434660","434666","434666","434666","434687","434687","434726","434745","434745","434745","434745","434791","434798","434806","434816","434816","434816","434850","434850","434873","434873","434873","434873","435014","435014","435030","435030","435030","435121","435173","435173","435175","435175","435175","435264","435372","435372","435372","435372","435719","435719","435734","435798","435798","435798","435798","435812","435849","435849","435849","435870","435932","436077","436077","436166","436180","436328","436328","436344","436402","436402","436402","436573","436583","436583","436585","436585","436587","436587","436636","436636","436636","436939","436939","436939","437354","437354","437354","437406","437415","437835","439017","48524","48524","48524","48524","48524","48524","48524","53033","53106","53198","53200","53200","56812","56812","56812","56812","56812","56812","56812","56885","59493","62920","63987","63987","67193","71297","71297","71297","72625","74122","74190","78878","81071","83230","86883","87016","87016","87016","87016","87016","87207","87306","87306","87306","89657","90057","90200","90205","90892","90945","91116","91164","91240","91377","91688","93238","93353","93356","93664","94319","94443","94894","95680","97538","97538","97538","98700","98808","99536","99596","99837","99920","99920"};
        Set<String> skuList = new HashSet<>();
        Collections.addAll(skuList, list);  //去重
        List<ItemModel> itemModels= new ArrayList<>();

        StringBuffer html = new StringBuffer();
        html.append("<html>");

        //excel
        int ri = 0;
        HSSFWorkbook wb = new HSSFWorkbook();
        HSSFSheet sheet = wb.createSheet("数据1");
        HSSFRow row = sheet.createRow(ri);
        row.createCell(0).setCellValue("SPU");
        row.createCell(1).setCellValue("url");
        row.createCell(2).setCellValue("Title");
        row.createCell(3).setCellValue("Description");
        row.createCell(4).setCellValue("img...");
        ri++;

        System.out.println("total::"+skuList.size());
        int ii = 1;
        for (String spu:
             skuList) {
            System.out.println(ii); ii++;

            String url = baseUrl+spu;
            try {
                ItemModel itemModel = new ItemModel();
                itemModel.setSpu(spu);
                itemModel.setUrl(url);
                System.out.println("======"+spu);

                Document doc = Jsoup.connect(url).get();
                Elements li = doc.select("#dirProList li");
                if (li.size() == 0){
                    itemModel.setTitle("商品不存在");
                    itemModel.setDesription("");
                    itemModel.setImgs(null);
                    itemModels.add(itemModel);
                    continue;
                }

                String itemUrl = li.get(0).select("a").attr("href");
                Document itemDoc = Jsoup.connect(itemUrl).get();

                itemModel.setTitle(itemDoc.select(".goods-detail-name").text());
                itemModel.setDesription(itemDoc.select("#description .collapse-body").text());

                Elements elements = itemDoc.select("#gallery .swiper-wrapper img");
                List<String> imgs = new ArrayList<>();
                for (Element e:
                     elements) {
                    imgs.add(e.attr("src"));
                }
                itemModel.setImgs(imgs);
                itemModels.add(itemModel);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        for (ItemModel itemModel:
                itemModels) {
            int i = 0;
            HSSFRow row2 = sheet.createRow(ri);
            row2.createCell(i).setCellValue(itemModel.getSpu());
            i++; row2.createCell(i).setCellValue(itemModel.getUrl());
            i++; row2.createCell(i).setCellValue(itemModel.getTitle());
            i++; row2.createCell(i).setCellValue(itemModel.getDesription());
            String imgsHtml = "";
            if (itemModel.getImgs()!=null){
                for (String img:
                        itemModel.getImgs()) {
                    i++; row2.createCell(i).setCellValue(img);

                    imgsHtml += " <img width='100' src='"+img+"'/> ";
                }
            }
            ri++;

            //html
            String format = "<div><table><tr><td>Spu:</td><td>%s</td></tr><tr><td>Title:</td><td>%s</td></tr><tr><td>Decription:</td><td>%s</td></tr><tr><td>Url:</td><td><a href='%s'>跳转</a></td></tr><tr><td>图片:</td><td>%s</td></tr></table></div><hr>";
            html.append(String.format(format, itemModel.getSpu(),
                    itemModel.getTitle(), itemModel.getDesription(),itemModel.getUrl(), imgsHtml));
        }

        html.append("</html>");

        FileOutputStream fileOut;
        try {
            fileOut = new FileOutputStream("C:/Users/feng/my_file/javawww/javabuck/workbook.xls");
            wb.write(fileOut);
            fileOut.close();

            //html
            fileOut = new FileOutputStream("C:/Users/feng/my_file/javawww/javabuck/index.html");
            PrintWriter pw = new PrintWriter(fileOut);
            pw.write(html.toString());
            pw.flush();
            pw.close();
            fileOut.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("写出成功！");
    }
}
